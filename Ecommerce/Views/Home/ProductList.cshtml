@using DAL.Models
@model DAL.ViewModels.ProductViewModel
@using DAL.ViewModels
@{
    ViewData["Title"] = "Products";
    ViewData["showLayout"] = true;
    int currentUser = ViewBag.CurrentUser != null ? ViewBag.CurrentUser : 0;
}

<style>
    .card-title {
        font-size: 1.1rem;
    }

    .card-footer button {
        width: 32px;
        height: 32px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div class="dash" id="content">
    <div class="d-flex flex-wrap justify-content-between align-items-center ">
        <h2 class="col-lg-4 txtCustom">Products</h2>

        <div class="d-flex justify-content-end align-items-center flex-wrap">
            <div class="col-lg m-2 position-relative searchItem">
                <input class="form-control fs-6 " type="text" aria-label="Search" placeholder="Search"
                    name="searchString" id="searchCInput">
                <button type="button" class="position-absolute searchInput btn btn-link"><i
                        class="fa-solid fa-search"></i></button>
            </div>
        </div>

    </div>
    <div>
        <div class="row" id="productGrid">
            @if (Model != null && Model.Products.Count > 0)
            {
                foreach (var item in Model.Products)
                {
                    <div class="col-md-3 mb-4">
                        <div class="card h-100 shadow-sm border-0" data-id="@item.Id">
                            <img src="~/images/@item.CoverImage" class="card-img-top" alt="Product Image"
                                style="height: 300px; width: 100%; object-fit: contain; border-radius: 8px;">
                            <div class="card-body">
                                <h5 class="card-title text-truncate">@item.Name</h5>
                                <p class="card-text small text-muted">@item.Category.Name</p>
                                <p class="card-text fw-semibold">@item.Price.ToString("C")</p>
                            </div>
                            <div class="card-footer wishList bg-white border-top-0 d-flex justify-content-end">
                                <div class="wishList"><i
                                        class="fa-heart fs-5 txtCustom @(item.WishList.Any(w => w.UserId == currentUser) ? "fa-solid text-danger" : "fa-regular")"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center">
                    <p>No products found.</p>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $('.card-img-top').click(function (e) {
        e.stopPropagation();
        e.stopPropagation();
        var productId = $(this).closest('.card').attr('data-id');
        window.location.href = '/Home/ProductDetails/?productId=' + productId;
    });
    $('.wishList').click(function (e) {
        e.stopPropagation();
        e.stopPropagation();
        @* if (@currentUser == 0) {
            console.log(@currentUser);
            window.location.href = '/Account/Login';
        }
        else { *@
            var icon = $(this).find('i');
        var productId = $(this).closest('.card').attr('data-id');
        $.ajax({
            url: '/User/Wishlist/ToggleWishlist',
            type: 'POST',
            data: { productId: productId },
            success: function (response) {
                console.log(response);
                if (response.status == "Success") {
                    if (icon.hasClass('fa-regular')) {
                        icon.removeClass('fa-regular').addClass('fa-solid text-danger');
                    } else {
                        icon.removeClass('fa-solid text-danger').addClass('fa-regular');
                    }
                    toastr.success("Product wishlist updated.");
                }
                else if (response.status == "UnAuthorized") {
                    toastr.error("Please log in to use wishlist.");
                } else if (response.status == "NotFound") {
                    toastr.error("Product not found !!");
                }
            },
            error: function (xhr) {
                console.log(xhr);
                if (xhr.status == 401) {
                    window.location.href = '/User/Wishlist/ToggleWishlist/?productId=' + productId;
                }
            }
        });
        @* } *@
    });
</script>