@model DAL.ViewModels.CartViewModel
@{
    ViewData["Title"] = "My Cart";
    ViewData["showLayout"] = true;
    int currentUser = ViewBag.CurrentUser != null ? ViewBag.CurrentUser : 0;
}

<div class="m-4 p-4">
    <h2 class="mb-4 txtCustom">My Cart</h2>
    @if (Model.CartItems.Count > 0)
    {
        <div class="row">
            <div class="col-md-8" style="overflow-y: scroll; max-height: 750px !important; scrollbar-width: none;">
                @foreach (var item in Model.CartItems)
                {
                    <div class="card mb-3 shadow-sm border-0 p-2">
                        <div class="row g-0">
                            <div class="col-md-3 productDetails" data-id="@item.ProductId">
                                <img src="~/images/@item.CoverImage" class="img-fluid rounded-start p-2"
                                    style="height: 180px; object-fit: contain;">
                            </div>
                            <div class="col-md-9">
                                <div class="card-body" data-id="@item.ProductId">
                                    <h5 class="card-title">@item.Name</h5>
                                    <p class="card-text text-muted small">@item.Name.Split(' ')[0]</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex flex-row" style="border: 2px solid #0c5ba3; border-radius: 5px;">
                                            <div class="btn dec px-3">-</div>
                                            <div class="d-flex align-items-center justify-content-center px-3 input">
                                                @item.Quantity</div>
                                            <div class="btn inc px-3" data-quantity="@item.StockQuantity">+</div>
                                        </div>
                                        <p class="fw-semibold fs-5 mb-0">
                                            <span>₹</span>
                                            <span class="price" data-price="@item.Price">@item.Price.ToString("N")</span>
                                        </p>
                                        <button class="btn btn-outline-danger rmv">Remove</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="col-md-4">
                <div class="card shadow-sm p-3">
                    <h5 class="fw-semibold border-bottom pb-2 mb-3">PRICE DETAILS</h5>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Price (@Model.CartItems.Count items)</span>
                        <div>
                            <span>₹</span>
                            <span class="totalPrice">0</span>
                            @* <span class="totalPrice">@Model.CartItems.Sum(p => p.Price * p.Quantity)</span> *@
                        </div>

                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Delivery Charges</span>
                        <span class="text-success">FREE</span>
                    </div>
                    <hr />
                    <div class="d-flex justify-content-between fw-bold fs-5">
                        <span>Total Amount</span>
                        <div>
                            <span>₹</span>
                            <span class="orderTotal">0</span>
                        </div>
                    </div>
                    <button class="btn btn-primary w-100 mt-4 placeOrder">Place Order</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center p-5">
            <h5 class="mt-3">No items in cart</h5>
            <p class="text-muted">You haven't Added any Products yet. Explore Products to get started.</p>
            <a href="/Home/ProductByCategory" class="btn btn-primary">Browse Products</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        var quantity = 0;
        var productId = 0;
        function UpdateTotal() {
            var totalPrice = 0;
            $('.price').each(function () {
                var price = parseInt($(this).data('price'));
                var quantity = parseInt($(this).closest('.d-flex').find('.input').text());
                totalPrice += price * quantity;
                $('.totalPrice').text(totalPrice.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                $('.orderTotal').text(totalPrice.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
            });
        }

        function UpdateCart() {
            console.log(productId);
            console.log(quantity);
            $.ajax({
                url: '/Home/UpdateCart',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    if (response.status == "NotFound") {
                        toastr.error("Product not found !!");
                    } else {
                        toastr.success("Product Quantity Updated Successfully!!");
                        $('body').html(response);
                    }
                },
                error: function () {
                    alert('An error occurred while updating the product quantity');
                }
            });
        }

        $(document).ready(function () {
            UpdateTotal();
        });

        $('.productDetails').click(function (e) {
            e.preventDefault();
            var productId = $(this).data('id');
            window.location.href = '/Home/ProductDetails/?productId=' + productId;
        });

        $('.dec').click(function (e) {
            e.preventDefault();
            var input = $(this).siblings('.input')[0];
            var value = parseInt($(input).text());
            if (!isNaN(value)) {
                if (value <= 1) {
                    $(input).text(1);
                } else {
                    $(input).text(value - 1);
                    quantity = value - 1;
                    productId = $(this).closest('.card-body').attr('data-id');
                    UpdateCart();
                }
            }
        });

        $('.inc').click(function (e) {
            e.preventDefault();
            var input = $(this).siblings('.input')[0];
            var value = parseInt($(input).text());
            var maxVal = $(this).data('quantity');
            if (value >= maxVal) {
                $(input).text(maxVal);
            } else if (!isNaN(value)) {
                $(input).text(value + 1);
                quantity = value + 1;
                productId = $(this).closest('.card-body').attr('data-id');
                UpdateCart();
            }
        });

        $('.rmv').click(function () {
            e.preventDefault();
            var productId = $(this).closest('.card-body').attr('data-id');

            Swal.fire({
                title: "Are you sure?",
                text: "You are Removing this Product from Cart !",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, Remove it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Home/RemoveFromCart',
                        type: 'POST',
                        data: { productId: productId },
                        success: function (response) {
                            if (response.status == "NotFound") {
                                toastr.error("Product not found !!");
                            } else {
                                toastr.success("Product Removed From Cart Successfully!!");
                                $('body').html(response);
                            }
                        },
                        error: function () {
                            alert('An error occurred while adding the product to wishlist.');
                        }
                    });
                }
            });
        });

        $('.placeOrder').on('click', function () {
            window.location.href = `/User/Order/PlaceOrder`;
        });
    </script>
}