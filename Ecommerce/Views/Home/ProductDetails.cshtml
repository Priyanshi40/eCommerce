@using DAL.Models
@model DAL.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Product Details";
    ViewData["showLayout"] = true;
}

<style>


    .zoom-wrapper {
        border: 1px solid #ddd;
        overflow: hidden;
        padding: 10px;
        background: #f8f9fa;
    }

    .zoom-img {
        width: 100%;
        max-height: 450px;
        object-fit: contain;
    }

    .thumbImg {
        width: 80px;
        height: 80px;
        object-fit: cover;
        margin: 5px;
        border: 2px solid transparent;
        cursor: pointer;
        transition: border 0.2s;
    }

    .thumbImg.active {
        border-color: #007bff;
    }

    .product-actions button {
        min-width: 140px;
        margin-right: 10px;
    }

    .product-price {
        font-size: 24px;
        color: #28a745;
        font-weight: bold;
    }

    .product-title {
        font-size: 26px;
        font-weight: 600;
        color: #333;
    }

    .product-category {
        color: #777;
        margin-bottom: 15px;
    }
</style>

<div class="productContainer shadow p-4 m-5">
    <div class="row">
        <div class="col-md-6">
            <div class="zoom-wrapper mb-3">
                <img id="mainImage" src="~/images/@Model.CoverImage" data-zoom-image="~/images/@Model.CoverImage"
                    class="zoom-img" />
            </div>

            <div class="d-flex flex-wrap">
                <img src="@Url.Content("~/images/" + Model.CoverImage)" class="thumbImg active"
                    onclick="changeMainImage(this)" data-zoom-image="@Url.Content("~/images/" + Model.CoverImage)" />

                @foreach (var img in Model.ProductImages ?? new List<string>())
                {
                    <img src="@Url.Content("~/images/" + img)" class="thumbImg" onclick="changeMainImage(this)"
                        data-zoom-image="@Url.Content("~/images/" + img)" />
                }
            </div>
        </div>

        <div class="col-md-6">
            <h3 class="product-title">@Model.Name</h3>
            <p class="product-category">@Model.CategoryName</p>
            <div class="product-price">â‚¹ @Model.Price.ToString("N2")</div>
            <p class="mt-3">@Html.Raw(Model.Description)</p>
            <hr />
            <div class="product-actions d-flex">
                <button class="btn @(Model.StockQuantity > 0 ? "btn-outline-primary" : "btn-outline-secondary pe-none")">
                    <i class="fa-solid fa-cart-plus me-2"></i>Add to Cart
                </button>
                <button class="btn @(Model.StockQuantity > 0 ? "btn-primary" : "btn-secondary pe-none")">
                    <i class="fa-solid fa-bolt-lightning me-2"></i>Buy Now
                </button>
                @if(Model.StockQuantity<1){
                <span class="text-danger">Currently out of stock.</span>
            }
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        function changeMainImage(imgElement) {
            const newSrc = imgElement.src;
            const zoomImage = imgElement.getAttribute("data-zoom-image");

            const mainImage = document.getElementById("mainImage");
            mainImage.src = newSrc;
            mainImage.setAttribute("data-zoom-image", zoomImage);

            $('.zoomContainer').remove();
            $(mainImage).ezPlus({
                zoomType: 'lens',
                lensShape: 'round',
                lensSize: 200
            });

            document.querySelectorAll(".thumbImg").forEach(img => img.classList.remove("active"));
            imgElement.classList.add("active");
        }

        $(document).ready(function () {
            $("#mainImage").ezPlus({
                zoomType: 'lens',
                lensShape: 'round',
                lensSize: 200
            });
        });
    </script>
}