@using DAL.Enums
@using DAL.Models
@using DAL.ViewModels
@{
    ViewData["Title"] = "Product";
    ViewData["showLayout"] = true;
}

<div class="content dash p-4 m-4" id="content">
    <div class="d-flex flex-wrap justify-content-center align-items-center ">
        <h2 class="col-lg txtCustom">My Products</h2>

        @* <div class="d-flex  align-items-center flex-wrap"> *@
            <div class="col-lg-3 col-md-6  my-1 position-relative me-2 searchItem">
                <input class="row-md form-control fs-6 " type="text" aria-label="Search" placeholder="Search"
                    name="searchString" id="searchCInput">
                <button type="button" class="position-absolute searchInput btn btn-link"><i
                        class="fa-solid fa-search"></i></button>
            </div>
            <div class="col-lg-2 my-1 me-2">
                <select class="form-select fs-6" aria-label="Default select example" id="statusLabel"
                    asp-items="@(new SelectList(Enum.GetNames(typeof(ProductStatus))))">
                    <option value="" selected>All Status</option>
                </select>
            </div>
            <div class="col-lg-2 my-1 me-2">
                <select class="form-select fs-6" id="categoryLabel" asp-items="ViewBag.Category">
                    <option value="-1">All Category</option>
                </select>
            </div>
            <div><a class="col-lg my-1 pe-0">
                    <button class="btn btn-primary btn-bg bgCustom px-2 fw-bold addProduct" type="button">+ Add
                        Product</button>
                </a></div>
        @* </div> *@
    </div>
    <div>
        <div id="PartialProductDiv" class="mt-4"></div>
    </div>
</div>

<div class="modal fade" id="addProductsModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog  modal-lg modal-dialog-centered " role="document">
        <div class="modal-content">
            <div class="modal-header ">
                <h5 class="modal-title" id="exampleModalLabel">Add Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form class="addCatForm" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="catModal"></div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary savebtn" onclick="AddProductFunction()">Save</button>
                    <button type="button" class="btn btn-outline-primary resetBtn">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header d-flex">
                <h5 class="modal-title" id="deleteModalLabel">Delete Product</h5>
                <button type="button" class="btn-close text-end" data-bs-dismiss="modal"></button>
            </div>
            <div class=" d-flex flex-column modal-body align-items-center justify-content-center">
                <img src="~/images/warning.png" alt="" class="img-fluid" style="width: 50px;">
                <div class="deleteContent">Are you sure you want to delete this
                    Product?
                </div>
            </div>
            <div class="modal-footer">
                <a type="submit" class="btn btn-primary" id="finaldelete">Yes</a>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        loadProducts();

        $("#searchCInput").on("keyup", function () {
            loadProducts();
        });

        $("#categoryLabel").on("change", function () {
            loadProducts();
        });
        $("#statusLabel").on("change", function () {
            loadProducts();
        });
    });

    function loadProducts() {
        let pageSize = $('#pageSize').val();
        let pageNumber = $('#pageNumber').val();
        let searchString = $("#searchCInput").val();
        let category = $("#categoryLabel").val();
        let status = $("#statusLabel").val();
        $.ajax({
            url: '/Vendor/Product/ProductList',
            type: 'GET',
            data: {
                statusFilter: status,
                searchString: searchString,
                pageSize: pageSize,
                pageNumber: pageNumber,
                category: category
            },
            success: function (response) {
                $('#PartialProductDiv').html(response);
            },
            error: function () {
                toastr.error("Failed to load products");
            }
        });
    }

    let galleryFiles = [];
    let removedGalleryImages = [];
    $(".addProduct").click(function () {
        let productId = 0;
        $.ajax({
            url: "/Vendor/Product/ProductModal",
            type: "GET",
            data: { productId: productId },
            success: function (data) {
                $('#addProductsModal').modal('show');
                $('.catModal').html(data);
                $('.modal-title').text('Add New Product');
            },
            error: function () {
                alert("Failed to Add Product");
            }
        });
    });

    $(document).on("click", ".editProduct", function () {
        let productId = $(this).data("id");
        $.ajax({
            url: "/Vendor/Product/ProductModal",
            type: "GET",
            data: { productId: productId },
            success: function (data) {
                $('#addProductsModal').modal('show');
                $('.catModal').html(data);
                $('.modal-title').text('Edit Product');
            },
            error: function () {
                alert("Failed to Edit Product");
            }
        });
    });

    function AddProductFunction() {
        event.preventDefault();
        event.stopPropagation();

        tinymce.triggerSave();

        let formData = new FormData($(".addCatForm")[0]);

        let imageFile = $("#file-input-thing")[0].files[0];
        if (imageFile) {
            formData.append("ProductImage", imageFile);
        }
        console.log(imageFile);

        for (let i = 0; i < galleryFiles.length; i++) {
            formData.append("GalleryImages", galleryFiles[i]);
        }

        @* galleryFiles.forEach(file => {
            if (typeof file === 'object') {
                formData.append("GalleryImages", file);
            }
        }); *@

            console.log(galleryFiles);

        var result = $('.addCatForm').valid();

        console.log(result);
        if (result) {
            $.ajax({
                url: '/Vendor/Product/AddProduct',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.status == "ValidationError") {
                        toastr.error("Enter valid data");
                        return;
                    }
                    else {
                        toastr.success("Product Added/Updated Successfully!!");
                        $('#PartialProductDiv').html(response);
                        $('#addProductsModal').modal('hide');
                    }
                }
            });
        }
    }

    $(document).on("click", ".viewProduct", function () {
        let productId = $(this).data("id");
        window.location.href = `/Vendor/Product/ProductDetails?productId=${productId}`;
    });

    $(document).on("click", ".deleteProduct", function () {
        let productId = $(this).data("id");
        $('#deleteModal').modal('show');

        $("#finaldelete").click(function () {
            $.ajax({
                url: "/Vendor/Product/DeleteProduct",
                type: "GET",
                data: { productId: productId },
                success: function (data) {
                    if (data.status === "NotFound") {
                        toastr.error("Product does not found or already been deleted");
                    }
                    else {
                        $('#PartialProductDiv').html(response);
                    }
                },
                error: function () {
                    alert("Failed to Delete Product");
                }
            });
        });
    });
</script>